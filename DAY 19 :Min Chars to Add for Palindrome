Min Chars to Add for Palindrome
Difficulty: HardAccuracy: 46.79%Submissions: 62K+Points: 8
Given a string s, the task is to find the minimum characters to be added at the front to make the string palindrome.

Note: A palindrome string is a sequence of characters that reads the same forward and backward.

Examples:

Input: s = "abc"
Output: 2
Explanation: Add 'b' and 'c' at front of above string to make it palindrome : "cbabc"
Input: s = "aacecaaaa"
Output: 2
Explanation: Add 2 a's at front of above string to make it palindrome : "aaaacecaaaa"
Constraints:
1 <= s.size() <= 106


code :
//{ Driver Code Starts
/* Driver program to test above function */

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

/* POSSIBLE APPROACH:
1. KMP BASED 
2. MANACHERS ALGO*/



class Solution {
  public:
    int minChar(string& s) {
        // Write your code here
            string rev_s = s;
    reverse(rev_s.begin(), rev_s.end());

    string concat = s + "#" + rev_s;
    int n = concat.length();

    vector<int> lps(n, 0);  

    for (int i = 1; i < n; ++i) {
        int j = lps[i - 1];
        while (j > 0 && concat[i] != concat[j]) {
            j = lps[j - 1];
        }
        if (concat[i] == concat[j]) {
            j++;
        }
        lps[i] = j;
    }

    int longest_palindromic_suffix = lps[n - 1];

    return s.length() - longest_palindromic_suffix;
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        string str;
        cin >> str;
        Solution ob;
        int ans = ob.minChar(str);
        cout << ans << endl;

        cout << "~"
             << "\n";
    }
    return 0;
}

// } Driver Code Ends

